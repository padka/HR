name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    name: build (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Codex system document present
        run: test -f ./.codex/system.md

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run tests
        run: pytest --cov=backend --cov=tests --cov-report=xml --cov-report=term

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: Ensure no merge conflict markers remain
        run: |
          if rg -n -e '^<<<<<<< ' -e '^>>>>>> ' -e '^=======$'; then
            exit 1
          fi

  ui:
    name: ui
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - id: pkg
        name: Detect build script
        run: |
          set -euo pipefail
          value=$(npm pkg get scripts.build 2>/dev/null | tr -d '"[:space:]')
          if [ -z "$value" ] || [ "$value" = "null" ] || [ "$value" = "{}" ]; then
            echo "has_build=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_build=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build UI
        if: steps.pkg.outputs.has_build == 'true'
        run: npm run build
