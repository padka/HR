"""Template helpers for bot messages."""

from __future__ import annotations

from typing import Any, Dict, Optional

from backend.domain.repositories import get_template
from backend.domain.template_stages import STAGE_DEFAULTS

DEFAULT_TEMPLATES: Dict[str, str] = {
    # –û–±—â–∏–µ
    "choose_recruiter": (
        "üë§ <b>–í—ã–±–æ—Ä —Ä–µ–∫—Ä—É—Ç—ë—Ä–∞</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –∫–æ–ª–ª–µ–≥–∏, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–∫–Ω–∞."
    ),
    "slot_taken": "–°–ª–æ—Ç —É–∂–µ –∑–∞–Ω—è—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π:",
    "slot_sent": "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
    "approved_msg": (
        "‚úÖ <b>–í—Å—Ç—Ä–µ—á–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</b>\n"
        "üóì {dt}\n"
        "–°—Å—ã–ª–∫–∞/–∞–¥—Ä–µ—Å –ø—Ä–∏–¥—É—Ç –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —è–≤–∫–∏ –∑–∞ 2 —á–∞—Å–∞."
    ),
    "confirm_2h": (
        "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –≤—Å—Ç—Ä–µ—á–∞ (–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å) —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ ‚Äî {dt}.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—á–∞—Å—Ç–∏–µ. –°—Å—ã–ª–∫–∞ –ø—Ä–∏–¥—ë—Ç –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
    ),
    "reminder_1h": "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –≤—Å—Ç—Ä–µ—á–∞ (–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å) —á–µ—Ä–µ–∑ —á–∞—Å ‚Äî {dt}.",
    "att_confirmed_link": "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–¢–µ–ª–µ–º–æ—Å—Ç: {link}\n–í—Å—Ç—Ä–µ—á–∞–µ–º—Å—è {dt}",
    "att_declined": "–ü–æ–Ω–∏–º–∞—é. –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–±–µ—Ä—ë–º –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è.",
    "result_fail": (
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—Ä–µ–º—è! –ù–∞ —Ç–µ–∫—É—â–µ–º —ç—Ç–∞–ø–µ –º—ã –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å.\n"
        "–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–º –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Å–≤—è–∂–µ–º—Å—è –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–æ–ª–µ–π."
    ),

    # –¢–µ—Å—Ç 1
    "t1_intro": (
        "‚ú® <b>SMART: –º–∏–Ω–∏-–∞–Ω–∫–µ—Ç–∞</b>\n"
        "–û—Ç–≤–µ—Ç—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî —ç—Ç–æ –∑–∞–π–º—ë—Ç 2‚Äì3 –º–∏–Ω—É—Ç—ã –∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é."
    ),
    "t1_progress": "<i>–í–æ–ø—Ä–æ—Å {n}/{total}</i>",
    "t1_done": (
        "üéØ –°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞.\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∫—Ä—É—Ç—ë—Ä–∞ –∏ –≤—Ä–µ–º—è –¥–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≤–∏–¥–µ–æ-–∏–Ω—Ç–µ—Ä–≤—å—é (15‚Äì20 –º–∏–Ω—É—Ç)."
    ),

    # –¢–µ—Å—Ç 2
    "t2_intro": (
        "üìò <b>–û–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç</b>\n"
        "–í–æ–ø—Ä–æ—Å–æ–≤: {qcount} ‚Ä¢ –õ–∏–º–∏—Ç: {timelimit} –º–∏–Ω/–≤–æ–ø—Ä–æ—Å ‚Ä¢ –ú–∞–∫—Å. –ø–æ–ø—ã—Ç–æ–∫: {attempts}\n"
        "–£—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫."
    ),
    "t2_result": (
        "üéØ <b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b>\n\n"
        "‚ñ´Ô∏è <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:</b> {correct}\n"
        "‚ñ´Ô∏è <b>–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª:</b> {score}\n"
        "‚ñ´Ô∏è <b>–£—Ä–æ–≤–µ–Ω—å:</b> {rating}"
    ),

    # –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ (–ø–æ—Å–ª–µ –¢–µ—Å—Ç–∞ 2)
    "no_slots": (
        "–ü–æ–∫–∞ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∫—Ä—É—Ç—ë—Ä–∞.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    ),
}

DEFAULT_TEMPLATES.update(STAGE_DEFAULTS)

__all__ = ["DEFAULT_TEMPLATES", "tpl"]


async def _fetch_template(city_id: Optional[int], key: str) -> Optional[str]:
    """Return template text from DB (city specific or global)."""
    try:
        template = await get_template(city_id, key)
    except Exception:
        template = None
    if template is None:
        return None
    if isinstance(template, str):
        return template
    return getattr(template, "text", None) or getattr(template, "content", None)


async def tpl(city_id: Optional[int], key: str, **fmt: Any) -> str:
    text = await _fetch_template(city_id, key) or DEFAULT_TEMPLATES.get(key, "")
    if not fmt:
        return text
    try:
        return text.format(**fmt)
    except Exception:
        return text
